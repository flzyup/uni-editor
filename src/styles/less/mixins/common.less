// 常用混合器
.flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-between() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.flex-start() {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.full-height() {
  height: 100%;
  min-height: 0;
}

.flex-column() {
  display: flex;
  flex-direction: column;
}

.flex-row() {
  display: flex;
  flex-direction: row;
}

.panel-base() {
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: @panel-border-radius;
  overflow: hidden;
  backdrop-filter: blur(4px);
}

.button-base() {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  min-height: 32px;
  padding: 8px 16px;
  border-radius: (@button-border-radius + 4);
  border: 1px solid color-mix(in srgb, var(--border) 60%, transparent);
  background:
    linear-gradient(
      140deg,
      color-mix(in srgb, var(--panel) 94%, color-mix(in srgb, var(--accent) 8%, transparent)) 0%,
      color-mix(in srgb, var(--panel) 84%, color-mix(in srgb, var(--accent) 18%, transparent)) 100%
    );
  color: var(--text);
  font-size: @font-size-sm;
  font-weight: 600;
  letter-spacing: 0.01em;
  cursor: pointer;
  transition: transform 0.18s ease, box-shadow 0.18s ease, border-color 0.18s ease, background 0.18s ease, color 0.18s ease;
  box-shadow:
    inset 0 1px 0 color-mix(in srgb, rgba(255, 255, 255, 0.6) 16%, transparent),
    0 6px 16px -12px color-mix(in srgb, var(--accent) 45%, transparent),
    0 1px 3px color-mix(in srgb, var(--border) 70%, transparent);
  text-decoration: none;

  &:hover {
    border-color: color-mix(in srgb, var(--accent) 36%, var(--border));
    background:
      linear-gradient(
        140deg,
        color-mix(in srgb, var(--panel) 94%, color-mix(in srgb, var(--accent) 12%, transparent)) 0%,
        color-mix(in srgb, var(--panel) 80%, color-mix(in srgb, var(--accent) 26%, transparent)) 100%
      );
    color: color-mix(in srgb, var(--text) 93%, white);
    transform: translateY(-1px);
    box-shadow:
      inset 0 1px 0 color-mix(in srgb, rgba(255, 255, 255, 0.7) 20%, transparent),
      0 10px 22px -14px color-mix(in srgb, var(--accent) 55%, transparent),
      0 4px 10px color-mix(in srgb, var(--accent) 16%, transparent);
  }

  &:active {
    transform: translateY(0);
    background:
      linear-gradient(
        148deg,
        color-mix(in srgb, var(--panel) 78%, color-mix(in srgb, var(--accent) 15%, transparent)) 0%,
        color-mix(in srgb, var(--panel) 64%, color-mix(in srgb, var(--accent) 32%, transparent)) 100%
      );
    box-shadow:
      inset 0 2px 6px color-mix(in srgb, rgba(0, 0, 0, 0.7) 28%, transparent),
      0 5px 12px -8px color-mix(in srgb, var(--accent) 52%, transparent);
  }

  .focus-ring();
}

// Utility: focus ring for interactive elements
.focus-ring() {
  &:focus-visible {
    outline: none;
    border-color: color-mix(in srgb, var(--accent) 55%, var(--border));
    box-shadow:
      0 0 0 1px color-mix(in srgb, var(--panel) 70%, transparent),
      0 0 0 4px color-mix(in srgb, var(--accent) 32%, transparent),
      0 8px 22px -14px color-mix(in srgb, var(--accent) 45%, transparent);
  }
}

// Reduced motion helper
.reduced-motion() {
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

.text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-multiline-truncate(@lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: @lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 响应式混合器
.mobile(@rules) {
  @media (max-width: @mobile-max) {
    @rules();
  }
}

.tablet(@rules) {
  @media (max-width: @tablet-max) {
    @rules();
  }
}

.desktop(@rules) {
  @media (min-width: @desktop-min) {
    @rules();
  }
}

// 主题混合器
.theme-variant(@property, @light-value, @dark-value) {
  @{property}: @dark-value;
  
  .theme-light & {
    @{property}: @light-value;
  }
}
